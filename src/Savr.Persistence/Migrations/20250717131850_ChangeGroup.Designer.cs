// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Savr.Persistence.Data;

#nullable disable

namespace Savr.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250717131850_ChangeGroup")]
    partial class ChangeGroup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Savr.Domain.Entities.CustomerReview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ListingId")
                        .HasColumnType("bigint");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.ToTable("CustomerReviews");
                });

            modelBuilder.Entity("Savr.Domain.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OwnerUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6836),
                            Description = "Restaurants, cafes, and food delivery services.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Food & Drinks"
                        },
                        new
                        {
                            Id = -2,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6838),
                            Description = "Gyms, spas, salons, and wellness services.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Beauty & Fitness"
                        },
                        new
                        {
                            Id = -3,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6839),
                            Description = "Entertainment venues, attractions, and recreational activities.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Attraction & Leisure"
                        },
                        new
                        {
                            Id = -4,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6840),
                            Description = "Clothing stores, boutiques, and shopping centers.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Fashion & Retail"
                        },
                        new
                        {
                            Id = -5,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6841),
                            Description = "Essential services for daily needs like laundry or repairs.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Everyday Services"
                        },
                        new
                        {
                            Id = -6,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6842),
                            Description = "Hotels, travel agencies, and transportation services.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Hotel & Travel"
                        },
                        new
                        {
                            Id = -7,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6843),
                            Description = "Schools, tutors, and educational institutions.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Education"
                        },
                        new
                        {
                            Id = -8,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6844),
                            Description = "Hospitals, clinics, and healthcare providers.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Healthcare"
                        },
                        new
                        {
                            Id = -9,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6845),
                            Description = "Banks, insurance, and financial consulting.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Financial Services"
                        },
                        new
                        {
                            Id = -10,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6846),
                            Description = "Property listings, realtors, and housing services.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Real Estate"
                        },
                        new
                        {
                            Id = -11,
                            CreatedAt = new DateTime(2025, 7, 17, 13, 18, 49, 966, DateTimeKind.Utc).AddTicks(6847),
                            Description = "Professional consulting for businesses or individuals.",
                            IsActive = true,
                            OwnerUserId = new Guid("3d32337a-7372-4261-98b9-8352c83d8751"),
                            Title = "Consulting"
                        });
                });

            modelBuilder.Entity("Savr.Domain.Entities.Listing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("AverageRating")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3, 2)
                        .HasColumnType("numeric(3,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal>("CurrentPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<int?>("GroupId1")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("PreviousPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<double>("PriceDropPercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("double precision");

                    b.Property<decimal>("PriceWithPromotion")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupId1");

                    b.HasIndex(new[] { "Description", "Name" }, "UniqueIndex_PDes_PName")
                        .IsUnique();

                    b.ToTable("Listings", (string)null);
                });

            modelBuilder.Entity("Savr.Domain.Entities.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ListingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Savr.Domain.Entities.CustomerReview", b =>
                {
                    b.HasOne("Savr.Domain.Entities.Listing", "Listing")
                        .WithMany("Reviews")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("Savr.Domain.Entities.Listing", b =>
                {
                    b.HasOne("Savr.Domain.Entities.Group", "Group")
                        .WithMany("Listings")
                        .HasForeignKey("GroupId1");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Savr.Domain.Entities.Tag", b =>
                {
                    b.HasOne("Savr.Domain.Entities.Listing", "Listing")
                        .WithMany("Tags")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("Savr.Domain.Entities.Group", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("Savr.Domain.Entities.Listing", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
